version: '3.8'

x-mongo-secrets: &mongo-credentials
  MONGO_USER: &mongo-user root
  MONGO_PASS: &mongo-pass toor
  MONGO_AUTH_DB: admin
  MONGO_HOST: mongo
  MONGO_PORT: 27017
  MONGO_DB_NAME: productdb

services:
  mongo:
    restart: always
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: *mongo-user
      MONGO_INITDB_ROOT_PASSWORD: *mongo-pass
    ports:
      - 27017:27017
    volumes:
      - mymongodb:/data/db

  productmanager:
    build:
      context: . #productmanager
      dockerfile: Dockerfile
    ports:
      - "3333:3333"
    depends_on:
      - mongo
    restart: always
    environment:
      <<: *mongo-credentials


  zookeper:
    restart: always
    image: library/zookeeper:3.4.13
    environment:
      ZOO_MY_ID: 1

  kafka:
    image: wurstmeister/kafka:2.11-2.0.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_PORT: 9092
      BROKER_ID_COMMAND: "hostname | cut -d'-' -f2"
      KAFKA_CREATE_TOPICS: "logging:20:1,pushnotifications:10:1,orderupdates:10:1"
      KAFKA_LISTENERS: "PLAINTEXT://:9092"
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeper:2181
    depends_on:
      - zookeper

volumes:
  mymongodb:
